{
    "folders":
    [
        {
            "path":                    ".",
            "name":                    "Configuration",
            "folder_exclude_patterns": [ "bin", "examples", "f_n_b", "include", "objects", "src", "test" ]
        },
        {
            "path": "include",
            "name": "Public Headers"
        },
        {
            "path": "src",
            "name": "Source and Private Headers"
        },
        {
            "path": "test",
            "name": "Unit and Functional Tests"
        },
        {
            "path": "f_n_b",
            "name": "Flex and Bison"
        },
        {
            "path": "bin",
            "name": "Binary Executables"
        },
        {
            "path": "objects",
            "name": "Binary Objects"
        },
        {
            "path": "examples",
            "name": "Examples"
        }
    ],

    "settings":
    {
        "ensure_newline_at_eof_on_save":     true,
        "rulers":                            [ 110 ],
        "tab_size":                          4,
        "translate_tabs_to_spaces":          true,
        "trim_trailing_white_space_on_save": true
    },

    "build_systems":
    [
        {
            "name":        "Build All",
            "selector":    "scons",
            "shell_cmd":   "scons",
            "working_dir": "${project_path}"
        },
        {
            "name":        "Model Development",
            "shell_cmd":   "scons -Q runModelsTests 2> errors.log",
            "working_dir": "${project_path}"
        },
        {
            "name":        "Routines Development",
            "shell_cmd":   "scons -Q runRoutinesTests 2> errors.log",
            "working_dir": "${project_path}"
        },
        {
            "name":        "GTL Development",
            "shell_cmd":   "scons -Q runGTLTests 2> errors.log",
            "working_dir": "${project_path}"
        },
        {
            "name":        "Program Controllers Development",
            "shell_cmd":   "scons -Q runProgramsTests 2> errors.log",
            "working_dir": "${project_path}"
        }
    ]
}
